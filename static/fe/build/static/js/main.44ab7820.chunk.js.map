{"version":3,"sources":["logo4.jpeg","serviceWorker.js","containers/audioManager/index/index.js","component/uploader/upload.js","containers/audioManager/components/audioplayer/audioPlayer.js","containers/audioManager/infoDescription/infoDescription.js","utils/request.js","api/audiomanager.js","containers/audioManager/changeSize/previewButton.js","containers/audioManager/changeSize/sizeSlider.js","containers/audioManager/components/download/download.js","containers/audioManager/history/previewA.js","containers/audioManager/components/delete/delete.js","containers/audioManager/history/history.js","containers/audioManager/changeSize/changeVolume.js","Redux/actions/index.js","Redux/reducers/operation_token.js","Redux/reducers/index.js","Redux/store/tokenstore.js","containers/audioManager/user/login/login.js","Redux/containers/ReduxLoginInput.js","containers/audioManager/user/login/loginModal.js","containers/audioManager/user/register/register.js","containers/audioManager/division/divisionAudio.js","containers/audioManager/merge/mergeAudio.js","containers/audioManager/Aligner/Modal.js","containers/audioManager/Aligner/Alidropdown.js","containers/audioManager/Aligner/Progress.js","containers/audioManager/Aligner/Download.js","containers/audioManager/Aligner/AliTable.js","containers/audioManager/Aligner/Aliupload.js","router/audioManager/routeConfig.js","router/audioManager/routeList.js","containers/audioManager/user/userCenter/dropIcon.js","Redux/containers/Reduxlogout.js","containers/audioManager/layout/layheader.js","containers/audioManager/layout/sideMenu.js","router/audioManager/routeMap.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Content","Layout","Introduction","style","padding","margin","Item","background","minHeight","React","Component","withRouter","Dragger","Upload","ChangeSizeUpload","onChange","info","status","file","console","log","fileList","resp","response","parseInt","code","message","error","name","msg","props","setVolume","setState","current","localStorage","setItem","data","success","multiple","action","accept","token","getItem","this","className","type","AudioPlayer","src","audioSrc","host","controls","InfoDescription","title","bordered","textAlign","size","label","org_filename","audio_type","volume","framerate","channels","duration","marginTop","layout","http_org_filepath","http_vol_filepath","instance","axios","create","baseURL","timeout","withCredentials","xsrfCookieName","interceptors","request","use","config","headers","method","params","Promise","reject","Error","url","resolve","post","then","res","catch","Api","PreviewButton","state","ModalText","visible","confirmLoading","audioInfo","buttonDisabled","showModal","task_id","getVoiceInfo","handleOk","setTimeout","handleCancel","disabled","marginLeft","onClick","onCancel","closable","footer","maskClosable","width","bodyStyle","paddingTop","centered","destroyOnClose","IntegerStep","inputValue","buttonLoading","value","span","min","max","loading","Download","checkStatus","statusText","shape","icon","downLoad","vol_filepath","keys","Object","values","paramsStr","map","item","index","href","currentTimestamp","Date","getTime","a","document","createElement","display","filename","download","body","appendChild","click","removeChild","URL","revokeObjectURL","PreviewA","Delete","recordKey","confirm","e","cancel","taskId","deleteVoiceById","table","key","i","length","splice","color","onConfirm","okText","cancelText","Input","Search","HistoryTable","getOneAudio","columns","dataIndex","render","text","record","id","tags","tag","toUpperCase","downloadFunc","createNew","removeItem","getVoiceHistory","warning","to","marginBottom","dataSource","Step","Steps","ChangeVolume","extra","historyData","checkLogin","direction","description","setToken","removeToken","initialState","operation_token","combineReducers","store","createStore","Reducer","LoginFrom","linkRegister","history","push","handleSubmit","preventDefault","form","validateFields","err","username","password","login","getState","email","errors","model","getFieldDecorator","onSubmit","rules","required","prefix","placeholder","valuePropName","initialValue","float","htmlType","block","getView","LoginForm","Form","ReduxLogin","connect","dispatch","bindActionCreators","LoginModal","modal","home","Header","Option","Select","RegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","nickname","phone","register","handleConfirmBlur","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","domain","tailFormItemLayout","wrapperCol","xs","offset","sm","prefixSelector","marginRight","paddingRight","labelCol","hasFeedback","validator","Password","onBlur","whitespace","addonBefore","Alidropdown","show","language","changechinese","changenglish","menu","overlay","Aliprogress","percent","showpercent","Axios","interval","setInterval","prevProps","prevState","snapshot","clearInterval","AliDownload","AliTable","context","setlanguage","begin","actionlist","showaction","forEach","resultlist","result","languagelist","start","success_","statuslist","failed","undefined","displayTtsList","page","data_","statuslist_","actionlist_","languagelist_","Aliupload","showIcon","menu_1","path","exact","component","Index","sidebarName","RouteWithSubRoutes","route","routes","routerConfig","User","logout","rel","placement","backgroundColor","ReduxUser","layHeader","require","alt","height","theme","mode","defaultSelectedKeys","lineHeight","SubMenu","Menu","Sider","sideMenu","menuList","subMenuList","pathname","defaultOpenKeys","borderRight","RouterMap","Footer","AliUpload","PureComponent","createBrowserHistory","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44ab7820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo4.16f2c303.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-26 12:14:42\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-26 16:04:41\n */\nimport React from 'react';\nimport { Layout, Breadcrumb } from 'antd';\nimport { withRouter } from 'react-router';\n\nconst { Content } = Layout;\n\nclass Introduction extends React.Component {\n    render () {\n        return (\n            <Layout style={{ padding: '0 24px 24px' }}>\n\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>语音</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                    <Breadcrumb.Item>简介</Breadcrumb.Item>\n                </Breadcrumb>\n                <Content\n                    style={{\n                        background: '#fff',\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280\n                    }}\n                >\n                    <p>小成本制作，欢迎fork star </p>\n                    <p>制作人 : 响哥 </p>\n                    <p>制作人 : 靖无涯</p>\n                    <p>制作人 : coffee</p>\n                    <p>制作人 : 风满楼</p>\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(Introduction);\n"," /*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-10-29 21:01:17\n */\nimport React from 'react';\n\nimport { Upload, Icon, message } from 'antd';\n\nconst { Dragger } = Upload;\n\nclass ChangeSizeUpload extends React.Component {\n    onChange = (info) => {\n      const { status } = info.file;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        let resp = info.file.response;\n        if (parseInt(resp.code) !== 0) {\n          info.file.status = 'error';\n          message.error(`${info.file.name} file upload failed. (Error:` + resp.msg + ')');\n        } else {\n          this.props.setVolume.setState({ current: 1 });\n          localStorage.setItem('task_id', resp.data);\n          message.success(`${info.file.name} file uploaded successfully.`);\n        }\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n    render () {\n        const props = {\n          name: 'file',\n          multiple: true,\n          action: '/voice/upload',\n          accept: '.mp3, .wav',\n          data: {\n            token: localStorage.getItem('user_token')\n          }\n        };\n\n        return (\n            <Dragger {...props} onChange={this.onChange} >\n                <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">点击或者拖拽文件上传</p>\n\n            </Dragger>\n        );\n    }\n}\nexport default ChangeSizeUpload;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-30 15:53:56\n */\nimport React from 'react';\n\nclass AudioPlayer extends React.Component {\n    render () {\n        console.log(this.props.src);\n        let audioSrc = 'http://' + window.location.host + this.props.src;\n\n        return (\n            <audio\n                controls=\"controls\"\n                src={audioSrc}\n                style={this.props.style}\n            />\n        );\n    }\n}\nexport default AudioPlayer;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-10-29 22:00:04\n */\nimport React from 'react';\nimport { Descriptions } from 'antd';\nimport AudioPlayer from '../components/audioplayer/audioPlayer';\n\nclass InfoDescription extends React.Component {\n    render () {\n        return (\n            <div>\n            <Descriptions\n                title=\"音频信息\"\n                bordered\n                style={{ textAlign: 'center' }}\n                // layout=\"vertical\"\n                size=\"small\"\n            >\n                <Descriptions.Item label=\"文件名\">{this.props.data.org_filename}</Descriptions.Item>\n                <Descriptions.Item label=\"格式\">{this.props.data.audio_type}</Descriptions.Item>\n                <Descriptions.Item label=\"音量设置\">{this.props.data.volume}</Descriptions.Item>\n                <Descriptions.Item label=\"采样率\">{this.props.data.framerate}</Descriptions.Item>\n                <Descriptions.Item label=\"声道数\">{this.props.data.channels}</Descriptions.Item>\n                <Descriptions.Item label=\"时长(s)\">{this.props.data.duration}</Descriptions.Item>\n            </Descriptions>\n            <Descriptions\n                title=\"音频对比\"\n                bordered\n                style={{ textAlign: 'center', marginTop: 20 }}\n                size=\"small\"\n                layout=\"vertical\"\n            >\n                <Descriptions.Item label=\"Orginal Audio\">\n                    <AudioPlayer src={this.props.data.http_org_filepath}/>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Volumed Audio\">\n                    <AudioPlayer src={this.props.data.http_vol_filepath}/>\n                </Descriptions.Item>\n            </Descriptions>\n            </div>\n        );\n    }\n}\n\nexport default InfoDescription;\n","\nimport axios from 'axios';\n\n// 创建axios实例\nconst instance = axios.create({\n    baseURL: '', // api的base_url  Vue项目可以根据 process.env.BASE_API，React可以在这里定义\n    timeout: 50000, // 请求超时时间\n    withCredentials: true, // 跨域携带cookie\n    xsrfCookieName: 'xsrf-token' // 当创建实例的时候配置默认配置\n    // responseType: 'arraybuffer',\n});\n\n// 添加请求拦截器，这里面可以配置一下每次请求都需要携带的参数，比如 token，timestamp等等，根据项目自己配置\ninstance.interceptors.request.use(\n    function (config) {\n        // 每次请求带上token和用户编号\n        // if (store.getters.token) {\n        // config.headers['Token'] = getToken()\n        // config.headers['Authorization'] = store.getters.userId\n        // }\n        config.headers['Content-Type'] = 'application/json;charset=UTF-8';\n        // 每次请求带上时间戳 防刷处理\n        if (config.method === 'get' || config.method === 'delete') {\n            config.params = {\n                ...config.params\n\n            };\n        } else if (config.method === 'post' || config.method === 'put') {\n            config.data = {\n                ...config.data\n\n            };\n        } else {\n            config.data = {\n                ...config.data\n\n            };\n        }\n        return config;\n    },\n    function (error) {\n        // 对请求错误做些什么\n        return Promise.reject(error);\n    }\n);\n\n// 添加响应拦截器 ，这里的 response是接收服务器返回后的结果，也可以在这里做一些状态判断\ninstance.interceptors.response.use(\n    response => {\n        /**\n         * 判断服务器请求是否成功\n         * @method if\n         * @param  {[type]} response [description]\n         * @return {[type]}          [description]\n         */\n        if (response.status !== 200) {\n            return Promise.reject(new Error('网络异常，请稍后重试'));\n        } else {\n            return response;\n        }\n        // const res = response.data;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\nlet post = (url, params) => {\n    return new Promise((resolve, reject) => {\n        instance.post(url, params).then(res => {\n            resolve && resolve(res.data);\n            console.log(res);\n        }).catch((res) => {\n\n        });\n    });\n};\n\nlet get = (url, params) => {\n    return new Promise((resolve, reject) => {\n        instance.get(url, params).then((res) => {\n            resolve && resolve(res.data);\n        }).catch((res) => {\n            // if (Error.isError(res)) {\n            //\n            // }\n\n        });\n    });\n};\n\n// 提供axios给外部调用\nexport default { post, get };\n","import request from '../utils/request';\n\nclass Api {\n    static login (params) {\n        return request.post('/voice/login', params);\n    }\n\n    static register (params) {\n        return request.post('/voice/register', params);\n    }\n\n    static setVolume (params) {\n        return request.post('/voice/volume', params);\n    }\n\n    static deleteVoiceById (params) {\n        return request.post('/voice/delete', params);\n    }\n\n    static getVoiceHistory (params) {\n        return request.post('/voice/history', params);\n    }\n\n    static downloadVoiceById (params) {\n\n    }\n\n    static getVoiceInfo (params) {\n        return request.post('/voice/params', params);\n    }\n\n    static displayTtsList(params){\n        return request.post('/aligner/display',params);\n    }\n\n\n}\n\nexport default Api;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-23 19:54:43\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-11-11 19:55:02\n */\nimport React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport InfoDescription from '../infoDescription/infoDescription';\nimport Api from '../../../api/audiomanager';\n\nclass PreviewButton extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n    audioInfo: null,\n    buttonDisabled: true\n  };\n\n  showModal = () => {\n    let params = {\n        token: localStorage.getItem('user_token'),\n        task_id: localStorage.getItem('task_id')\n    };\n    Api.getVoiceInfo(params).then(resp => {\n        let code = resp.code;\n        if (parseInt(code) !== 0) {\n            message.error(resp.msg);\n        } else {\n            this.setState({\n                visible: true,\n                audioInfo: resp.data,\n                buttonDisabled: false\n            });\n        }\n    }).catch((res) => {\n        console.log(res);\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false\n    });\n  };\n\n  render () {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n        <Button\n          type=\"primary\"\n          disabled={this.props.status === 0 && !localStorage.getItem('task_id')}\n          style={{ marginLeft: 180 }}\n          onClick={this.showModal}\n        >\n          预览\n        </Button>\n        <Modal\n          // title=\"Title\"\n          visible={visible}\n          // onOk={this.handleOk}\n          // confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n          closable={false}\n          footer={null}\n          maskClosable={true}\n          width={ 800 }\n          bodyStyle={{ paddingTop: 50 }}\n          centered\n          destroyOnClose\n        >\n          <InfoDescription data={this.state.audioInfo}/>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PreviewButton;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-11-11 19:46:08\n */\nimport React from 'react';\nimport PreviewButton from './previewButton';\n\nimport { Slider, InputNumber, Row, Col, Button, message } from 'antd';\nimport Api from '../../../api/audiomanager';\nimport { tsThisType } from '@babel/types';\n\nclass IntegerStep extends React.Component {\n  state = {\n    inputValue: 0,\n    buttonLoading: false,\n    buttonDisabled: true\n  };\n\n  onChange = value => {\n    this.setState({\n      inputValue: value\n    });\n  };\n\n  setVolume = () => {\n    this.setState({ buttonLoading: true });\n\n    let params = {\n      token: localStorage.getItem('user_token'),\n      task_id: localStorage.getItem('task_id'),\n      volume: this.state.inputValue\n    };\n    Api.setVolume(params).then(resp => {\n      let code = resp.code;\n      if (parseInt(code) !== 0) {\n        message.error(resp.msg);\n      } else {\n        this.props.setVolume.setState({ current: 2 });\n        message.success('设置成功');\n        console.log(resp);\n      }\n      this.setState({ buttonLoading: false });\n    }).catch((res) => {\n      message.error('设置失败');\n      this.setState({ buttonLoading: false });\n      console.log(res.status);\n    });\n  };\n\n  render () {\n    const { inputValue } = this.state;\n    console.log(this.props.status);\n    return (\n      <Row style={{ width: 400 }}>\n        <Col span={12}>\n          <Slider\n            min={-20}\n            max={20}\n            onChange={this.onChange}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n          />\n        </Col>\n        <Col span={2}>\n          <InputNumber\n            min={-20}\n            max={20}\n            style={{ marginLeft: 16 }}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n        <Col span={3}>\n          <Button\n            type=\"primary\"\n            onClick={this.setVolume}\n            style={{ marginLeft: 100 }}\n            loading={this.state.buttonLoading}\n            disabled={this.props.status === 0 && !localStorage.getItem('task_id')}\n            >确定</Button>\n        </Col>\n        <Col span={3}>\n          <PreviewButton status={this.props.status}/>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default IntegerStep;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-11-11 19:06:08\n */\nimport React from 'react';\nimport { Button, message } from 'antd';\nimport Api from '../../../../api/audiomanager';\nclass Download extends React.Component {\n    checkStatus = (res) => {\n        if (res.status >= 200 && res.status < 300) {\n            return res;\n        }\n        const error = new Error(res.statusText);\n        error.response = res;\n        throw error;\n    };\n\n    static downLoad = (params) => {\n        console.log('jintu');\n        if (params == null) {\n            params = {\n                token: localStorage.getItem('user_token'),\n                task_id: localStorage.getItem('task_id')\n            };\n        }\n        Api.getVoiceInfo(params).then(resp => {\n            let code = resp.code;\n            if (parseInt(code) !== 0) {\n                message.error(resp.msg);\n            } else {\n                if (resp.data.vol_filepath) {\n                    let keys = Object.keys(params);\n                    let values = Object.values(params);\n                    console.log(keys, values);\n                    let paramsStr = '?';\n                    keys.map((item, index) => {\n                        paramsStr += item + '=' + values[index] + '&';\n                    });\n                    let host = window.location.host;\n\n                    let href = 'http://' + host + '/voice/download' + paramsStr;\n\n                    // let href = 'http://119.23.204.245:8073/voice/download' + paramsStr;\n                    console.log(href);\n\n                    const currentTimestamp = new Date().getTime();\n\n                    let a = document.createElement('a');\n                    a.style.display = 'none';\n                    let filename = currentTimestamp + '.mp3';\n\n                    a.href = href;\n                    a.download = filename;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                    window.URL.revokeObjectURL(a);\n                    message.success('下载成功！');\n                } else {\n                    message.error('请先调节音量后再下载');\n                }\n            }\n        });\n    };\n\n    render () {\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon=\"download\"\n                    size=\"large\"\n                    disabled={this.props.status < 2}\n                    onClick={() => Download.downLoad()}\n                >\n                    Download\n                </Button>\n                {/* <span style={{marginLeft:20,color:'gray'}}>注意：未登录时，请在十分钟内下载。</span> */}\n            </div>\n\n        );\n    }\n}\nexport default Download;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-23 19:54:43\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-10-30 17:41:00\n */\nimport React from 'react';\nimport { Modal, message } from 'antd';\nimport InfoDescription from '../../audioManager/infoDescription/infoDescription';\nimport Api from '../../../api/audiomanager';\n\nclass PreviewA extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n    audioInfo: null\n  };\n\n  showModal = () => {\n      let params = {\n          token: localStorage.getItem('user_token'),\n          task_id: localStorage.getItem('task_id')\n      };\n      Api.getVoiceInfo(params).then(resp => {\n          let code = resp.code;\n          if (parseInt(code) !== 0) {\n              message.error(resp.msg);\n          } else {\n              this.setState({\n                  visible: true,\n                  audioInfo: resp.data\n              });\n          }\n      }).catch((res) => {\n          console.log(res);\n      });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false\n    });\n  };\n\n  render () {\n    const { visible } = this.state;\n    return (\n      <div style={{ display: 'inline' }}>\n        <a\n          onClick={this.showModal}\n        >\n            Preview\n        </a>\n        <Modal\n          // title=\"Title\"\n          visible={visible}\n          // onOk={this.handleOk}\n          // confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n          closable={false}\n          footer={null}\n          maskClosable={true}\n          width={ 800 }\n          bodyStyle={{ paddingTop: 50 }}\n          centered\n          destroyOnClose\n        >\n          <InfoDescription data={this.state.audioInfo}/>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PreviewA;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-10-08 16:11:27\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-10-30 11:21:47\n */\nimport React from 'react';\nimport { Popconfirm, message, Icon } from 'antd';\nimport Api from '../../../../api/audiomanager';\n\nclass Delete extends React.Component {\n    state = {\n        recordKey: this.props.recordKey\n    }\n\n    confirm = (e) => {\n        console.log(e);\n        this.Delete();\n    }\n\n    cancel = (e) => {\n        console.log(e);\n        message.error('Click on No');\n    };\n\n    Delete = () => {\n        let params = {\n            token: localStorage.getItem('user_token'),\n            task_id: this.props.taskId\n        };\n        Api.deleteVoiceById(params).then(res => {\n            let code = res.code;\n            console.log('删除', code);\n            // if(parseInt(code) !== 0 ){\n            //     message.error(res['msg'])\n            // }else{\n                let data = this.props.table.state.data;\n                let key = this.state.recordKey;\n                console.log(key);\n                for (let i = 0; i < data.length; i++) {\n                    console.log(data[i].key);\n                    if (data[i].key == this.props.recordKey) {\n                        data.splice(i, 1);\n                        break;\n                    }\n                }\n                this.props.table.setState({ data: data });\n                message.success('删除成功！');\n            // }\n        });\n    };\n\n    render () {\n        return (\n            <Popconfirm\n                title=\"Are you sure delete this task?\"\n                icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\n                onConfirm={this.confirm}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n            >\n                <a>Delete</a>\n            </Popconfirm>\n\n        );\n    }\n};\nexport default Delete;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-11-11 20:11:46\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Divider, Tag, Button, Input, message, Breadcrumb, Layout } from 'antd';\nimport PreviewA from './previewA';\nimport Delete from '../components/delete/delete';\nimport Api from '../../../api/audiomanager';\n\nimport downloadFunc from '../components/download/download';\nconst { Search } = Input;\n\nconst { Content } = Layout;\n\nclass HistoryTable extends React.Component {\n    getOneAudio=(task_id) => {\n        localStorage.setItem('task_id', task_id);\n        console.log(task_id);\n    };\n\n    state = {\n        columns: [\n            {\n                title: 'Filename',\n                dataIndex: 'filename',\n                key: 'filename',\n                render: (text, record) => (\n                    <a href=\"/page/changeSize\" onClick={() => this.getOneAudio(record.id)}>{text}</a>\n\n                )\n            },\n            {\n                title: 'Type',\n                dataIndex: 'type',\n                key: 'type'\n            },\n            {\n                title: 'Volume',\n                dataIndex: 'volume',\n                key: 'volume'\n            },\n            {\n                title: 'CreateTime',\n                dataIndex: 'createtime',\n                key: 'createtime'\n            },\n            {\n                title: 'Tags',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => (\n                    <span>\n              {tags.map(tag => {\n                  let color = tag.length > 5 ? 'geekblue' : 'green';\n                  if (tag === 'complete') {\n                      color = 'green';\n                  }\n                  if (tag === 'upload') {\n                      color = 'geekblue';\n                  }\n                  return (\n                      <Tag color={color} key={tag}>\n                          {tag.toUpperCase()}\n                      </Tag>\n                  );\n              })}\n            </span>\n                )\n            },\n            {\n                title: 'Action',\n                key: 'action',\n                render: (text, record) => (\n                        <span>\n                            <PreviewA taskId={record.id}/>\n                            <Divider type=\"vertical\" />\n                            {record.tags.map(tag => {\n                                if (tag === 'complete') {\n                                    let params = {\n                                        token: localStorage.getItem('user_token'),\n                                        task_id: record.id\n\n                                    };\n                                    return [\n                                        <a onClick={() => downloadFunc.downLoad(params)}>\n                                            Download\n                                        </a>,\n                                        <Divider type=\"vertical\" />];\n                                }\n                            })}\n                            <Delete taskId={record.id} recordKey={record.key} table={this}/>\n                        </span>\n                )\n            }\n        ],\n        data: null\n    };\n\n    componentWillMount () {\n        let params = {\n            token: localStorage.getItem('user_token')\n        };\n        Api.getVoiceHistory(params).then(resp => {\n            let code = resp.code;\n            if (parseInt(code) !== 0) {\n                message.warning(resp.msg);\n                if (parseInt(code) === -3) {\n                    localStorage.removeItem('user_token');\n                }\n            } else {\n                this.setState({ data: resp.data });\n            }\n        });\n    }\n\n    createNew = () => {\n        localStorage.removeItem('task_id');\n    }\n\n    render () {\n        return (\n            <div>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>语音</Breadcrumb.Item>\n                        <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                        <Breadcrumb.Item>音频大小调整</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Content\n                        style={{\n                            background: '#fff',\n                            padding: 24,\n                            margin: 0,\n                            minHeight: 280\n                        }}\n                    >\n                        <Link to=\"/page/changeSize\">\n                            <Button\n                                type='primary'\n                                icon='plus'\n                                style={{ marginBottom: 20 }}\n                                onClick={this.createNew}\n                            >\n                                新建任务\n                            </Button>\n                        </Link>\n                        {/* <Search */}\n                        {/*    placeholder=\"input search text\" */}\n                        {/*    onSearch={value => console.log(value)} */}\n                        {/*    enterButton */}\n                        {/*    style={{ marginLeft: 30, width: 300 }} */}\n                        {/* /> */}\n                        <Table style={{ width: 1300 }} columns={this.state.columns} dataSource={this.state.data} />\n                    </Content>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default HistoryTable;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-11-11 18:50:40\n */\nimport React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n// import HistoryTable from '../handlehistory';\n\nimport { Layout, Breadcrumb, Steps, Card, message, Tag, Divider, Button, Table } from 'antd';\nimport ChangeSizeUpload from '../../../component/uploader/upload';\nimport IntegerStep from './sizeSlider';\nimport Download from '../../audioManager/components/download/download';\nimport HistoryTable from '../history/history';\nimport PreviewA from '../history/previewA';\nimport downloadFunc from '../components/download/download';\nimport Delete from '../components/delete/delete';\nimport Api from '../../../api/audiomanager';\n\nconst { Step } = Steps;\n\nconst { Content } = Layout;\n\nclass ChangeVolume extends React.Component {\n    state = {\n        current: 0,\n        extra: '',\n        columns: [\n            {\n                title: 'Filename',\n                dataIndex: 'filename',\n                key: 'filename',\n                render: (text, record) => (\n                    <a href=\"/page/changeSize\" onClick={() => this.getOneAudio(record.id)}>{text}</a>\n\n                )\n            },\n            {\n                title: 'Type',\n                dataIndex: 'type',\n                key: 'type'\n            },\n            {\n                title: 'Volume',\n                dataIndex: 'volume',\n                key: 'volume'\n            },\n            {\n                title: 'CreateTime',\n                dataIndex: 'createtime',\n                key: 'createtime'\n            },\n            {\n                title: 'Tags',\n                key: 'tags',\n                dataIndex: 'tags',\n                render: tags => (\n                    <span>\n              {tags.map(tag => {\n                  let color = tag.length > 5 ? 'geekblue' : 'green';\n                  if (tag === 'complete') {\n                      color = 'green';\n                  }\n                  if (tag === 'upload') {\n                      color = 'geekblue';\n                  }\n                  return (\n                      <Tag color={color} key={tag}>\n                          {tag.toUpperCase()}\n                      </Tag>\n                  );\n              })}\n            </span>\n                )\n            },\n            {\n                title: 'Action',\n                key: 'action',\n                render: (text, record) => (\n                    <span>\n                            <PreviewA taskId={record.id}/>\n                            <Divider type=\"vertical\" />\n                        {record.tags.map(tag => {\n                            if (tag === 'complete') {\n                                let params = {\n                                    token: localStorage.getItem('user_token'),\n                                    task_id: record.id\n\n                                };\n                                return [\n                                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                                    <a onClick={() => downloadFunc.downLoad(params)}>\n                                        Download\n                                    </a>,\n                                    <Divider type=\"vertical\" />];\n                            }\n                        })}\n                        <Delete taskId={record.id} recordKey={record.key} table={this}/>\n                        </span>\n                )\n            }\n        ],\n        historyData: []\n    };\n\n    componentWillMount () {\n        // if(localStorage.getItem(\"user_token\")){\n        //     this.setState({extra: <Link to=\"/page/history\">history</Link>})\n        // }\n\n        // let params = {\n        //     \"token\": localStorage.getItem(\"user_token\")\n        // };\n        // Api.getVoiceHistory(params).then(resp => {\n        //     let code = resp['code'];\n        //     if(parseInt(code) !== 0){\n        //         message.warning(resp['msg']);\n        //         if(parseInt(code) === -3){\n        //             localStorage.removeItem('user_token');\n        //         }\n        //     }else{\n        //         this.setState({ historyData: resp['data'] })\n        //     }\n        // })\n\n    }\n\n    checkLogin = () => {\n        return true;\n    };\n\n    render () {\n        console.log(localStorage);\n        return (\n            <Layout style={{ padding: '0 50px 24px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>语音</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频大小调整</Breadcrumb.Item>\n                </Breadcrumb>\n                <Content\n                    style={{\n                        background: '#fff',\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280\n                    }}\n                >\n                    <div>\n                        <Steps direction=\"vertical\" current={this.state.current}>\n                            <Step\n                                title=\"上传音频文件\"\n                                description={\n                                    <Card style={{ width: 800 }} extra={<span onClick={this.checkLogin}>{this.state.extra}</span>}>\n                                        <ChangeSizeUpload file setVolume={this}/>\n                                    </Card>} />\n                            <Step\n                                title=\"设置音量大小\"\n                                description={\n                                    <Card style={{ width: 800 }}>\n                                        <IntegerStep setVolume={this} status={this.state.current}/>\n                                    </Card>} />\n                            <Step\n                                title=\"下载转换结果\"\n                                description={\n                                    <Card style={{ width: 800 }}>\n                                        <Download status={this.state.current} />\n                                    </Card>} />\n                        </Steps>\n                    </div>\n\n                </Content>\n\n                {/* <Content */}\n                {/*    style={{ */}\n                {/*        background: '#fff', */}\n                {/*        padding: 24, */}\n                {/*        margin: 0, */}\n                {/*        minHeight: 280, */}\n                {/*    }} */}\n                {/* > */}\n                {/*    <h3> */}\n                {/*        历史记录 */}\n                {/*    </h3> */}\n\n                {/*    <Table style={{width:1300}} columns={this.state.columns} dataSource={this.state.historyData} /> */}\n                {/* </Content> */}\n            </Layout>\n        );\n    }\n}\n\nexport default ChangeVolume;\n","\nexport const setToken = (token) => ({\n    type: 'SET_TOKEN',\n        token\n});\n\nexport const removeToken = (token) => ({\n    type: 'REMOVE_TOKEN',\n    token\n});\n","const initialState = localStorage.getItem('user_token');\nconst operation_token = (state = initialState, action) => {\n    console.log('进入reduce，下面是reduce中的state');\n    console.log(state);\n\n    switch (action.type) {\n        case 'SET_TOKEN':\n            console.log('set token');\n            return {\n                token: action.token\n            };\n        case 'REMOVE_TOKEN':\n            console.log('remove token');\n            localStorage.removeItem('user_token');\n            return {\n                token: action.token\n            };\n        default :\n            console.log('default');\n            return {\n                state\n            };\n    }\n};\n\nexport default operation_token;\n","import { combineReducers } from 'redux';\nimport operation_token from './operation_token';\n\nexport default combineReducers({\n    operation_token\n    }\n);\n","import { createStore } from 'redux';\nimport Reducer from '../reducers';\n\nexport const store = createStore(Reducer);\n","import React from 'react';\nimport {\n    Button,\n    Icon, Form, Input, message, Checkbox\n} from 'antd';\n\nimport Api from '../../../../api/audiomanager';\nimport './style.css';\nimport { store } from '../../../../Redux/store/tokenstore';\nimport { withRouter } from 'react-router';\n\nclass LoginFrom extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            password: '',\n            email: '',\n            errors: {},\n            model: 'login'\n        };\n    }\n\n    linkRegister = () => {\n        this.props.history.push('/register');\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n\n                let params = {\n                    username: values.username,\n                    password: values.password\n                };\n                Api.login(params).then(res => {\n                    let code = res.code;\n                    console.log(res);\n                    if (parseInt(code) !== 0) {\n                        message.error(res.msg);\n                    } else {\n                        message.success('Login Success!');\n                        localStorage.setItem('user_token', res.data);\n                        console.log(this.props);\n                        this.props.setToken(res.data);\n                        console.log(store.getState());\n                        // console.log(this.props.history);\n                        this.props.history.push('/page');\n                        // console.log(this.props.history);\n                    }\n                });\n            }\n        });\n    };\n\n    getView () {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n                {getFieldDecorator('username', {\n                    rules: [{ required: true, message: 'Please input your username!' }]\n                })(\n                    <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Username\"\n                    />\n                )}\n            </Form.Item>\n            <Form.Item>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }]\n                })(\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                )}\n            </Form.Item>\n            <Form.Item>\n                {getFieldDecorator('remember', {\n                    valuePropName: 'checked',\n                    initialValue: true\n                })(<Checkbox>Remember me</Checkbox>)}\n                <a className=\"login-form-forgot\" href=\"\" style={{ float: 'right' }}>\n                    Forgot password\n                </a>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                    Log in\n                </Button>\n                Or <a href=\"\" onClick={this.linkRegister}>register now!</a>\n            </Form.Item>\n        </Form>\n        );\n    }\n\n    render () {\n        return (\n            <div className=\"contain\">\n                <div className=\"login-form\">\n\n                    <div className=\"login-logo\">\n                        <div className=\"login-name\">Audio Tool</div>\n                    </div>\n                    <div>\n                        {this.getView()}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\nlet LoginForm = Form.create()(LoginFrom);\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setToken } from '../actions';\n// import loginInput from \"../../containers/audioManager/user/login/loginInput\"\n// import {loginModal} from \"../audioManager/user/login/loginModal\"\nimport login from '../../containers/audioManager/user/login/login';\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    };\n};\n\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ setToken }, dispatch);\n}\n\nconst ReduxLogin = connect(mapStateToProps, mapDispatchToProps)(login);\n\nexport default ReduxLogin;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-23 19:54:43\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-25 18:08:54\n */\nimport React from 'react';\nimport { Modal, Button } from 'antd';\n// import WrappedNormalLoginForm from './loginInput';\nimport WrappedNormalLoginForm from '../../../../Redux/containers/ReduxLoginInput';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginModal extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false\n  };\n\n  showModal = () => {\n    this.props.history.push('/login');\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false\n    });\n  };\n\n  render () {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div style={{ float: 'right' }}>\n        <Button\n          type='primary'\n          onClick={this.showModal}\n        >\n          登录\n        </Button>\n        <Modal\n          // title=\"Title\"\n          visible={visible}\n          // onOk={this.handleOk}\n          // confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n          closable={false}\n          footer={null}\n          maskClosable={true}\n          width={ 450 }\n          bodyStyle={{ paddingTop: 50 }}\n          centered\n          destroyOnClose\n        >\n          <h1 style={{ textAlign: 'center', marginBottom: 50 }}>Voice Manager</h1>\n          <WrappedNormalLoginForm modal={this} home={this.props.home}/>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginModal);\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-23 19:21:44\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-30 14:33:54\n */\nimport React from 'react';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    // Cascader,\n    Select,\n    // Row,\n    // Col,\n    Checkbox,\n    Button,\n    // AutoComplete,\n    Layout,\n    // Divider,\n    message\n  } from 'antd';\nimport LoginModal from '../login/loginModal';\nimport Api from '../../../../api/audiomanager';\n\nconst { Header, Content } = Layout;\nconst { Option } = Select;\n// const AutoCompleteOption = AutoComplete.Option;\n\nclass RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n\n          let params = {\n              email: values.email,\n              password: values.password,\n              nickname: values.nickname,\n              phone: values.phone,\n              prefix: values.prefix\n          };\n\n          Api.register(params).then(resp => {\n              let status = resp.code;\n              if (parseInt(status) === -1) {\n                  message.error('Register failed!');\n              } else {\n                  message.success('Register Success!');\n                  localStorage.setItem('user_token', resp.data);\n                  this.props.history.push('/page');\n              }\n          });\n        }\n      });\n    };\n\n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n\n    handleWebsiteChange = value => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({ autoCompleteResult });\n    };\n\n    render () {\n      const { getFieldDecorator } = this.props.form;\n      // const { autoCompleteResult } = this.state;\n\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        }\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      const prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(\n        <Select style={{ width: 70 }}>\n          <Option value=\"86\">+86</Option>\n          <Option value=\"87\">+87</Option>\n        </Select>\n      );\n\n      // const websiteOptions = autoCompleteResult.map(website => (\n      //   <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      // ));\n\n      return (\n        <Layout>\n            <Header>\n                <h1 style={{ color: 'white', float: 'left' }}>Voice Manager</h1>\n                <LoginModal /><span style={{ color: 'white', float: 'right', marginRight: 10 }}>已有账号，现在就</span>\n            </Header>\n            <Content\n                style={{\n                    background: '#fff',\n                    padding: 24,\n                    marginLeft: 0,\n                    minHeight: 250,\n                    paddingTop: 50,\n                    paddingRight: 200\n                }}\n            >\n                <div style={{ width: 550, margin: 'auto' }}>\n                <Form {...formItemLayout} onSubmit={this.handleSubmit} >\n                <Form.Item label=\"E-mail\">\n                    {getFieldDecorator('email', {\n                    rules: [\n                        {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!'\n                        },\n                        {\n                        required: true,\n                        message: 'Please input your E-mail!'\n                        }\n                    ]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                    rules: [\n                        {\n                        required: true,\n                        message: 'Please input your password!'\n                        },\n                        {\n                        validator: this.validateToNextPassword\n                        }\n                    ]\n                    })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                    rules: [\n                        {\n                        required: true,\n                        message: 'Please confirm your password!'\n                        },\n                        {\n                        validator: this.compareToFirstPassword\n                        }\n                    ]\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                </Form.Item>\n                <Form.Item\n                    label={\n                    <span>\n                        Nickname&nbsp;\n                        <Tooltip title=\"What do you want others to call you?\">\n                        <Icon type=\"question-circle-o\" />\n                        </Tooltip>\n                    </span>\n                    }\n                >\n                    {getFieldDecorator('nickname', {\n                    rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }]\n                    })(<Input />)}\n                </Form.Item>\n                {/* <Form.Item label=\"Habitual Residence\">\n                    {getFieldDecorator('residence', {\n                    initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                    rules: [\n                        { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                    ],\n                    })(<Cascader options={residences} />)}\n                </Form.Item> */}\n                <Form.Item label=\"Phone Number\">\n                    {getFieldDecorator('phone', {\n                    rules: [{ required: true, message: 'Please input your phone number!' }]\n                    })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\n                </Form.Item>\n                {/* <Form.Item label=\"Website\">\n                    {getFieldDecorator('website', {\n                    rules: [{ required: true, message: 'Please input website!' }],\n                    })(\n                    <AutoComplete\n                        dataSource={websiteOptions}\n                        onChange={this.handleWebsiteChange}\n                        placeholder=\"website\"\n                    >\n                        <Input />\n                    </AutoComplete>,\n                    )}\n                </Form.Item> */}\n                {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                    <Row gutter={8}>\n                    <Col span={12}>\n                        {getFieldDecorator('captcha', {\n                        rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                        })(<Input />)}\n                    </Col>\n                    <Col span={12}>\n                        <Button>Get captcha</Button>\n                    </Col>\n                    </Row>\n                </Form.Item> */}\n                <Form.Item {...tailFormItemLayout}>\n                    {getFieldDecorator('agreement', {\n                    valuePropName: 'checked',\n                    rules: [{ required: true, message: 'Please read the agreement!' }]\n                    })(\n                    <Checkbox>\n                        I have read the <a href=\"/register\">agreement</a>\n                    </Checkbox>\n                    )}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" block>\n                    Register\n                    </Button>\n                </Form.Item>\n                </Form>\n                </div>\n            </Content>\n        </Layout>\n      );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport { Layout, Breadcrumb } from 'antd';\n\nconst { Content } = Layout;\n\nclass DivisionLayout extends React.Component {\n    render () {\n        return (\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>语音</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频分割</Breadcrumb.Item>\n                </Breadcrumb>\n                <Content\n                    style={{\n                        background: '#fff',\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280\n                    }}\n                >\n                    {/* <Card title=\"第一步：上传文件\" style={{ width: 800 }}>\n                        <ChangeSizeUpload file/>\n                    </Card>\n                    <Card title=\"第二步：下载结果\" style={{ width: 800 }}>\n                        <Download />\n                    </Card> */}\n\n                </Content>\n            </Layout>\n        );\n    }\n}\nexport default DivisionLayout;\n","import React from 'react';\nimport { Layout, Breadcrumb } from 'antd';\n\nconst { Content } = Layout;\n\nclass MergeLayout extends React.Component {\n    render () {\n        return (\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item>语音</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                    <Breadcrumb.Item>音频合成</Breadcrumb.Item>\n                </Breadcrumb>\n                <Content\n                    style={{\n                        background: '#fff',\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280\n                    }}\n                >\n                    {/* <Card title=\"第一步：上传文件\" style={{ width: 800 }}>\n                        <ChangeSizeUpload file/>\n                    </Card>\n                    <Card title=\"第二步：下载结果\" style={{ width: 800 }}>\n                        <Download />\n                    </Card> */}\n\n                </Content>\n            </Layout>\n        );\n    }\n}\nexport default MergeLayout;\n","import React from 'react';\nimport { Modal, Button } from 'antd';\n\nclass AliModal extends React.Component {\n    state = { visible: false };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    }\n\n    handleOK = (e) => {\n        console.log(e);\n        this.setState({ visible: true });\n    };\n\n    handleCancel =(e) => {\n        console.log(e);\n        this.setState({ visible: false });\n    };\n\n    render () {\n        let res = '';\n        let data_ = this.props.data;\n        for (var i in data_) {\n            res += data_[i];\n            res += '\\n';\n        }\n\n        return (\n            <div style={{ display: 'inline' }}>\n                <a type=\"primary\" onClick={this.showModal}>\n                    Preview\n                </a>\n                <Modal\n                    title = \"Basic Modal\"\n                    visible = {this.state.visible}\n                    onOk = {this.handleOK}\n                    onCancel = {this.handleCancel}\n                >\n                    {res}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default AliModal;\n","import { Menu, Dropdown, Button, Icon, message } from 'antd';\nimport React from 'react';\n\nclass Alidropdown extends React.Component {\n    state = {\n        show: <Button>点击选择语言</Button>\n\n    };\n\n    language = '';\n\n    changechinese=() => {\n        this.language = 'chinese';\n\n        this.props.data(this.language);\n        this.setState({\n            show: <Button>中文</Button>\n\n        });\n    };\n\n    changenglish =() => {\n        this.language = 'english';\n        this.props.data(this.language);\n        this.setState({\n            show: <Button>英文</Button>\n        });\n    };\n\n    render () {\n        let menu = (\n            <Menu>\n                <Menu.Item key=\"1\" >\n                    <Icon type=\"user\"/>\n                    <Button onClick = {this.changechinese}>中文</Button>\n                </Menu.Item>\n                <Menu.Item key=\"2\" >\n                    <Icon type=\"user\" />\n                    <Button onClick={this.changenglish}>英文</Button>\n                </Menu.Item>\n            </Menu>\n        );\n        return (\n            <Dropdown overlay={menu}>\n                {this.state.show}\n            </Dropdown>\n        );\n    }\n}\nexport default Alidropdown;\n","import { Progress } from 'antd';\nimport React from 'react';\nimport Axios from 'axios';\n\nclass Aliprogress extends React.Component {\n    state= { percent: 0 };\n\n    showpercent =() => {\n        Axios.post('/aligner/percent', { id: this.props.id }).then(resp =>\n        this.setState({ percent: resp.data.data })\n        );\n    }\n\n    componentDidMount () {\n        this.interval = setInterval(() => this.showpercent(), 1000);\n    }\n\n    componentDidUpdate (prevProps, prevState, snapshot) {\n        if (this.state.percent === 100) {\n            clearInterval(this.interval);\n        }\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.interval);\n    }\n\n    render () {\n        return (\n            <Progress percent = {this.state.percent}/>\n        );\n    }\n}\n\nexport default Aliprogress;\n","import React from 'react';\nimport { Button, message } from 'antd';\nimport Axios from 'axios';\nimport downloadFunc from '../components/download/download';\n\nclass AliDownload extends React.Component {\n     download = () => {\n        let params = {\n            id: this.props.id\n        };\n        console.log(params);\n        let keys = Object.keys(params);\n        let values = Object.values(params);\n        console.log(keys, values);\n        let paramsStr = '?';\n        keys.map((item, index) => {\n            paramsStr += item + '=' + values[index] + '&';\n        });\n        let host = window.location.host;\n        let href = 'http://' + host + '/aligner/download' + paramsStr;\n        // let href = 'http://119.23.204.245:8073/aligner/download' + paramsStr;\n        console.log(href);\n        const currentTimestamp = new Date().getTime();\n\n        let a = document.createElement('a');\n        a.style.display = 'none';\n        let filename = currentTimestamp + '.mp3';\n\n        a.href = href;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(a);\n        message.success('下载成功！');\n    };\n\n    render () {\n        return (\n\n            <a onClick={() => this.download()}> Download </a>\n        );\n    }\n}\n\nexport default AliDownload;\n","import React from 'react';\nimport { Table, Divider, Tag, Alert, Button } from 'antd';\n\nimport Axios from 'axios';\nimport Alimodal from './Modal';\nimport Alidropdown from './Alidropdown';\nimport Aliprocess from './Progress';\nimport AliDownload from './Download';\nimport Api from \"../../../api/audiomanager\";\n\n\nclass AliTable extends React.Component {\n    constructor (props, context) {\n        super(props, context);\n        this.state = {\n            data: '',\n            res: '',\n            language: '',\n            languagelist: [],\n            statuslist: [],\n            actionlist: [],\n            showaction: [],\n            resultlist: []\n\n        };\n    }\n\n    setlanguage =(value) => {\n        this.setState({ language: value });\n    };\n\n    columns = [\n        {\n            title: '文件名称',\n            dataIndex: 'org_filename',\n            key: 'org_filename'\n\n        },\n        {\n            title: '上传时间',\n            dataIndex: 'upload_time',\n            key: 'upload_time'\n        },\n        {\n            title: '文章语言',\n            dataIndex: 'language',\n            key: 'language',\n            render: (text, record) => (\n                this.language(text, record)\n            )\n        },\n        {\n            title: '处理状态',\n            dataIndex: 'tags',\n            key: 'tags',\n            render: (text, record) => (\n\n                this.show(text, record)\n            )\n        },\n        {\n            title: '可执行操作',\n            key: 'action',\n            render: (text, record) => (\n                <span>\n                    {\n                        this.begin(text, record)\n                    }\n                <Divider type=\"vertical\"/>\n                {/* <Alimodal data = {this.state.res}/> */}\n                {/* <Divider type=\"vertical\"/> */}\n                <AliDownload id = {record.task_id}/>\n            </span>\n            )\n        }\n    ];\n\n    begin = (text, record) => {\n        if (this.state.actionlist[record.task_id] === 1) {\n            this.state.showaction[record.task_id] = <Aliprocess id = {record.task_id}/>;\n            return this.state.showaction[record.task_id];\n        } else {\n                return <a icon='play-circle' onClick={() => this.text(record)}> 开始打点 </a>;\n        }\n    };\n\n    language (text, record) {\n        if (this.state.languagelist[record.task_id] !== undefined) {\n            return this.state.languagelist[record.task_id];\n        } else {\n            return <Alidropdown data = {this.setlanguage}/>;\n        }\n    }\n\n    show (text, record) {\n        if (this.state.statuslist[record.task_id] === undefined) {\n            return <Tag color = 'orange'> 未开始 </Tag>;\n        } else {\n            return this.state.statuslist[record.task_id];\n        }\n    }\n    componentDidMount ()\n    {\n        Api.displayTtsList({page:0}).then(resp=>{\n            let data_ = resp.data.data;\n            this.setState({ data: data_ });\n        }\n        );\n    }\n    display (){\n        Api.displayTtsList({page:0}).then(resp =>{\n            let data_ = resp.data.data;\n            this.setState({ data: data_ });\n        });\n    }\n\n    text (record) {\n          if (this.state.language === 'chinese') {\n              let id = record.task_id;\n              let statuslist_ = this.state.statuslist;\n              statuslist_[id] = <Tag color = 'blue'> 处理中 </Tag>;\n              let actionlist_ = this.state.actionlist;\n              actionlist_[id] = 1;\n              let languagelist_ = this.state.languagelist;\n              languagelist_[id] = 'chinese';\n              this.setState({ statuslist: statuslist_, actionlist: actionlist_, languagelist: languagelist_ });\n              Axios.post('/aligner/chinese', { id: record.task_id }).then(resp =>\n                this.setState({\n                    res: resp.data.data\n                }, () => {\n                    statuslist_[id] = <Tag color='green'>成功</Tag>;\n                    this.setState({ statuslist: statuslist_ });\n                }\n                    )\n              );\n        } else if (this.state.language === 'english') {\n              let id = record.task_id;\n              let statuslist_ = this.state.statuslist;\n              statuslist_[id] = <Tag color = 'blue'> 处理中 </Tag>;\n              let actionlist_ = this.state.actionlist;\n              actionlist_[id] = 1;\n              let languagelist_ = this.state.languagelist;\n              languagelist_[id] = 'english';\n              this.setState({ statuslist: statuslist_, actionlist: actionlist_, languagelist: languagelist_ });\n              Axios.post('/aligner/english', { id: record.task_id }).then(resp => {\n                  this.setState({\n                          res: resp.data.data\n                      }, () => {\n                          statuslist_[id] = <Tag color='green'>成功</Tag>;\n                          this.setState({ statuslist: statuslist_ });\n                      }\n                  );\n}\n              );\n        }\n    }\n;\n    render = () => {\n        let data = '';\n        if (this.props.data) {\n            data = this.props.data;\n        } else {\n            data = this.state.data;\n        }\n        if (data) {\n            if (!data) {\n                data = [];\n            }\n            data.forEach((item, index) => {\n                console.log(item);\n                let id = item.task_id;\n                if (item.language !== '') {\n                    this.state.resultlist[id] = item.result;\n                }\n                if (item.language !== '') {\n                    this.state.languagelist[id] = item.language;\n                }\n                if (item.start === 1 && item.success_ === 0) {\n                    this.state.statuslist[id] = <Tag color = 'blue'> 处理中 </Tag>;\n                    this.state.actionlist[id] = 1;\n                }\n                if (item.success_ === 1) {\n                    this.state.statuslist[id] = <Tag color = 'green'> 成功 </Tag>;\n                    this.state.actionlist[id] = 1;\n                }\n                if (item.failed === 1) {\n                    this.state.statuslist[id] = <Tag color = 'red'> 失败 </Tag>;\n                    this.state.actionlist[id] = 1;\n                }\n            });\n        }\n        return (\n            <div>\n                <Table columns={this.columns} dataSource={data} style={{ marginTop: 20 }}/>\n            </div>\n        );\n    }\n}\n\nexport default AliTable;\n","import { Upload, Icon, message, Layout, Breadcrumb, Alert } from 'antd';\nimport React from 'react'\nimport AliTable from './AliTable'\nimport Axios from 'axios';\n\nconst { Dragger } = Upload;\n\n\nconst { Content } = Layout;\n\n\n\nclass Aliupload extends React.Component{\n    constructor(props,context){\n        super(props,context);\n        this.state = {\n            data : ''\n        }\n    }\n\n    render(){\n        let display = () => {\n            Axios.post('/aligner/display',{page:0}).then(resp =>{\n                this.setState({data : resp.data.data})\n            })\n        };\n        const props = {\n            action:'/aligner/upload',\n            name: 'file',\n            multiple: true,\n            onChange(info) {\n                const { status } = info.file;\n                if (status !== 'uploading') {\n                    display();\n                }\n                if (status === 'done') {\n                    message.success(`${info.file.name} file uploaded successfully.`);\n                } else if (status === 'error') {\n                    message.error(`${info.file.name} file upload failed.`);\n                }\n            },\n        };\n        return (\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>语音</Breadcrumb.Item>\n                <Breadcrumb.Item>音频管理工具</Breadcrumb.Item>\n                <Breadcrumb.Item>声音打点</Breadcrumb.Item>\n                </Breadcrumb>\n                <Content\n                style={{\n                    background: '#fff',\n                    padding: 24,\n                    margin: 0,\n                    minHeight: 280,\n                }}\n                >\n                    <div>\n                        <Alert message=\"使用须知\"\n                            description={\n                                <div>\n                                    <p>在开始打点前 请先选择文本的语言, 如果中文文本使用英文打点。那么结果惨不忍睹</p>\n                                </div>\n                            }\n                            type = \"info\"\n                            showIcon\n                            style={{ width: 800 }}\n                        />\n                        <div style={{ width: 800, marginTop: 40 }}>\n                            <Dragger {...props} >\n                                <p className=\"ant-upload-drag-icon\">\n                                    <Icon type=\"inbox\" />\n                                </p>\n                                <p className=\"ant-upload-text\">点击或将文件拖拽到此处上传文件</p>\n                            </Dragger>\n                        </div>\n                        <AliTable data = {this.state.data}/>\n                    </div>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default Aliupload","import Index from '../../containers/audioManager/index';\nimport ChangeVolume from '../../containers/audioManager/changeSize/changeVolume';\nimport Register from '../../containers/audioManager/user/register/register';\nimport HistoryTable from '../../containers/audioManager/history/history';\nimport DivisionLayout from '../../containers/audioManager/division/divisionAudio';\nimport MergeLayout from '../../containers/audioManager/merge/mergeAudio';\nimport Aliupload from '../../containers/audioManager/Aligner/Aliupload';\n\nconst menu_1 = {\n    name: '音频管理工具',\n    icon: 'audio',\n    key: 'main'\n};\n\nconst list = [\n    {\n        path: '/',\n        exact: true,\n        menu: [],\n        component: Index,\n        sidebarName: '首页'\n    },\n    {\n        path: '/changeVolume',\n        exact: true,\n        menu: [menu_1],\n        component: ChangeVolume,\n        sidebarName: '音频大小调整'\n    },\n    // {\n    //     path: '/merge',\n    //     exact: true,\n    //     menu:[menu_1],\n    //     component: MergeLayout,\n    //     sidebarName: '音频合并'\n    // },\n    // {\n    //     path: '/division',\n    //     exact: true,\n    //     menu:[menu_1],\n    //     component: DivisionLayout,\n    //     sidebarName: '音频分割'\n    // },\n    // {\n    //     path: '/trans',\n    //     exact: true,\n    //     menu:[menu_1],\n    //     component: Index,\n    //     sidebarName: '音频格式转换'\n    // },\n    {\n        path: '/chineseAligner',\n        exact: true,\n        menu: [menu_1],\n        component: Aliupload,\n        sidebarName: 'AI 打点'\n    },\n\n    {\n        path: '/history',\n        exact: true,\n        menu: [],\n        component: HistoryTable\n    }\n\n];\n\nconst result = list.map((item, index) => {\n    // item.path = util.getRouteBaseUrl() + item.path;\n    item.path = '/page' + item.path;\n    return item;\n});\n\nexport default result;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport util from 'util/util';\nimport routerConfig from './routeConfig.js';\n// let basePath = util.getRouteBaseUrl();\n\nconst routes = routerConfig;\n\nconst RouteWithSubRoutes = route => {\n    let Component = route.component;\n    return <Route path={route.path}\n        render={props => (\n            <Component {...props} routes={route.routes}/>\n        )}\n    />;\n};\nlet routesList = routes.map((route, i) => {\n    // route.path = basePath+route.path;\n    return <RouteWithSubRoutes key={i} {...route} />;\n});\nexport default routesList;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-25 16:23:14\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-30 11:18:15\n */\nimport React from 'react';\nimport { Menu, Avatar, Dropdown } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { store } from '../../../../Redux/store/tokenstore';\n\nclass User extends React.Component {\n    logout = () => {\n        this.props.removeToken('');\n    };\n\n    menu = (\n        <Menu>\n            <Menu.Item>\n                <a rel=\"noopener noreferrer\" href='/' onClick={this.logout}>\n                    退出\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n\n    render () {\n        console.log('###');\n        console.log(this.props);\n        console.log('###');\n        return (\n            <Dropdown overlay={this.menu} placement=\"bottomCenter\">\n                <a style={{ float: 'right' }} >\n                    <Avatar\n                        size=\"large\"\n                        icon=\"user\"\n                        style={{ backgroundColor: '#87d068' }}\n                        src=\"\"\n                    >User</Avatar>\n                </a>\n            </Dropdown>\n        );\n    }\n}\n\nexport default withRouter(User);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { removeToken } from '../actions';\nimport User from '../../containers/audioManager/user/userCenter/dropIcon';\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    };\n};\n\nfunction mapDispatchToProps (dispatch) {\n    return bindActionCreators({ removeToken }, dispatch);\n}\n\nconst ReduxUser = connect(mapStateToProps, mapDispatchToProps)(User);\n\nexport default ReduxUser;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-26 12:14:42\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-26 16:04:41\n */\nimport React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\n// import User from \"../user/userCenter/dropIcon\";\nimport User from '../../../Redux/containers/Reduxlogout';\nimport LoginModal from '../user/login/loginModal';\nimport { withRouter } from 'react-router';\n\nconst { Header } = Layout;\n\nclass layHeader extends React.Component {\n    render () {\n        let submodel = '';\n        if (localStorage.getItem('user_token')) {\n            submodel = <User />;\n        } else {\n            submodel = <LoginModal home={this} />;\n        }\n\n        return (\n            <Header className=\"header\">\n\n                <div className=\"logo\" style={{ float: 'left', marginRight: 80 }} >\n                    <img src={require('../../../logo4.jpeg')} alt=\"\" style={{ height: 50 }}></img>\n                </div>\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['1']}\n                    style={{ lineHeight: '64px' }}\n                >\n                    <Menu.Item key=\"1\"><Link to=\"/\">Speech</Link></Menu.Item>\n                    {/* <Menu.Item key=\"2\">nav 2</Menu.Item> */}\n                    {/* <Menu.Item key=\"3\">nav 3</Menu.Item> */}\n                    {/* {submodel} */}\n                </Menu>\n            </Header>\n        );\n    }\n}\n\nexport default withRouter(layHeader);\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-24 14:56:51\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-30 14:29:16\n */\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport routerConfig from '../../../router/audioManager/routeConfig';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nclass sideMenu extends React.Component {\n    constructor (props) {\n        super(props);\n\n        let menuList = [];\n        let subMenuList = [];\n\n        let curItem = '';\n\n        for (let i = 0; i < routerConfig.length; i++) {\n            if (routerConfig[i].path === props.location.pathname) {\n                // 当前命中\n                curItem = routerConfig[i];\n            }\n            if (routerConfig[i].menu) {\n                if (routerConfig[i].menu.length === 0) {\n                    // 爸爸级别\n                    menuList.push(routerConfig[i]);\n                }\n                if (routerConfig[i].menu.length === 1) {\n                    // 儿子级别\n                    subMenuList.push(routerConfig[i]);\n                }\n            }\n        }\n        this.state = {\n            // loginComp: <LoginModal />\n            menuList: menuList,\n            subMenuList: subMenuList\n        };\n    }\n\n    render () {\n        return (\n            <div>\n                <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu\n                        mode=\"inline\"\n                        // defaultSelectedKeys={['1']}\n                        defaultOpenKeys={['sub1']}\n                        style={{ height: '100%', borderRight: 0 }}\n                    >\n                        <SubMenu\n                            key=\"sub1\"\n                            title={\n                                <span>\n                                    <Icon type=\"audio\" />\n                            音频管理工具\n                        </span>\n                            }\n                        >\n                            {\n                                this.state.subMenuList.map((item, index) => {\n                                    if (item.menu[0].key === 'main') {\n                                        return <Menu.Item key={ item.path }>\n                                            <Link to={item.path}><span>{item.sidebarName}</span></Link>\n                                            <span>{item.sidebarName}</span>\n                                        </Menu.Item>;\n                                    }\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(sideMenu);\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport RoutesList from './routeList.js';\n\nimport { Layout, Menu, Icon } from 'antd';\nimport { Router } from 'react-router';\nimport LayHeader from '../../containers/audioManager/layout/layheader.js';\nimport ChangeVolume from '../../containers/audioManager/changeSize/changeVolume';\nimport SideMenu from '../../containers/audioManager/layout/sideMenu.js';\nimport Register from '../../containers/audioManager/user/register/register';\nimport Login from '../../Redux/containers/ReduxLoginInput';\nimport { store } from '../../Redux/store/tokenstore';\nimport AliUpload from '../../containers/audioManager/Aligner/Aliupload';\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass RouterMap extends React.PureComponent {\n    componentDidMount () {\n\n    }\n\n    render () {\n        let page = () => (\n            <Layout style={{ minHeight: 900 }}>\n                <LayHeader />\n            <Layout>\n                {/* <SideMenu /> */}\n                <Switch>\n                    {RoutesList}\n                </Switch>\n            </Layout>\n            </Layout>\n        );\n        let isLogin = false;\n        if (localStorage.getItem('user_token')) {\n            isLogin = true;\n        }\n\n        let loginWrapper = (SubComponent) => {\n            isLogin = localStorage.getItem('user_token');\n            // isLogin = store.getState();\n            return isLogin ? (<SubComponent/>) : (<Redirect to=\"/login\"/>);\n        };\n\n        return (\n            <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/page/changeVolume\" component={ChangeVolume} />\n                        <Route path=\"/page/chineseAligner\" component={AliUpload} />\n                        {/* <Route path=\"/page\" render={() => loginWrapper(page)} /> */}\n                        {/* <Route path=\"/page\" component={ChangeVolume} /> */}\n                        {/* <Route path=\"/register\" component={Register} /> */}\n                        {/* <Route path=\"/\" render={() => <Redirect to=\"/page\" />} /> */}\n                        {/* <Route exact path=\"/login\" render={() => */}\n                        {/*    isLogin ? (<Redirect to=\"/page\" />) : (<Route path=\"/login\" component={Login} />)} /> */}\n                        {/* <Route exact path=\"/\" render={() => isLogin ? (<Redirect to=\"/page\"/>):(<Redirect to=\"/login\"/>)} /> */}\n                    </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default RouterMap;\n","/*\n * @Description:\n * @version:\n * @Company: Thefair\n * @Author: Wang Yao\n * @Date: 2019-09-18 11:13:06\n * @LastEditors: Wang Yao\n * @LastEditTime: 2019-09-30 11:40:42\n */\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from 'history';\nimport RouteMap from './router/audioManager/routeMap.js';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store/tokenstore';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider store = {store}>\n        <RouteMap history={history} />,\n    </Provider>,\n  document.getElementById('layout')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}